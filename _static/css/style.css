/*! normalize.css v1.1.3 | MIT License | git.io/normalize */html{-webkit-box-sizing:border-box;box-sizing:border-box;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-family:sans-serif}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}article,aside,blockquote,body,details,dl,fieldset,figcaption,figure,footer,form,header,hgroup,legend,main,menu,nav,ol,p,section,summary,ul{display:block;margin:0;padding:0;border:0}audio,canvas,video{display:inline-block;display:inline;zoom:1}audio:not([controls]){display:none;height:0}[hidden]{display:none}body{margin:0;padding:0}a{text-decoration:none;cursor:pointer;color:inherit}:focus{outline:none;-webkit-focus-ring-color:transparent}a:active,a:hover{outline:0}h1,h2,h3,h4,h5,h6{line-height:1;margin:0;padding:0;font-weight:400}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}small{font-size:80%}dl,menu,ol,ul{margin:0}dd{margin:0 0 0 40px}ol,ul{-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;-webkit-padding-start:0;-moz-margin-before:0;-moz-margin-after:0;-moz-margin-start:0;-moz-margin-end:0;-moz-padding-start:0}img{width:100%;max-width:100%;border:0;margin:0;padding:0;vertical-align:middle;-ms-interpolation-mode:bicubic}svg:not(:root){overflow:hidden}legend{white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;padding:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input::-moz-selection,label::-moz-selection{background-color:transparent}input::selection,label::selection{background-color:transparent}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;*height:1em;*width:1em}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{display:block;overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}.clearfix:after{content:"";display:table;float:none;clear:both}.sr-only,.sr-only a{position:absolute;width:1px;height:1px;padding:0;margin:-1px;font-size:1px;line-height:1;overflow:hidden;clip:rect(0,0,0,0);border:0;outline:none;visibility:hidden}@supports (display:grid){html .grid__wrapper--outermost{display:-ms-grid;display:grid;grid-template-areas:"a a a a" "b c c d" "e e e e"}@media (max-width:767px){html .grid__wrapper--outermost{grid-template-areas:"a" "c" "b" "d" "e"}}html header{grid-area:a}html .aside__left{grid-area:b}html main{grid-area:c}html .aside__right{grid-area:d}html footer{grid-area:e}}.grid__wrapper--outermost{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row wrap;flex-flow:row wrap}.grid__wrapper--outermost header{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-flex-basis:100%;flex-basis:100%}.grid__wrapper--outermost .aside__left,.grid__wrapper--outermost .aside__right{display:-webkit-box;display:-webkit-flex;display:flex}.grid__wrapper--outermost main{-webkit-box-flex:2;-webkit-flex-grow:2;flex-grow:2}.grid__wrapper--outermost footer{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-flex-basis:100%;flex-basis:100%}html body{background:#fff}html{z-index:2}html body{visibility:visible!important;z-index:1;background-image:url(/img/bgImg/bg_cat3.jpg)}p{color:#000}nav{text-transform:uppercase}
/*# sourceMappingURL=data:application/json;base64, */